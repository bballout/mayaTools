global proc influenceLister (){		//textScrollList -e -removeAll influenceList;	string $sel[] = `ls -fl -sl`;		if(`size($sel)`)		{				string $jointList[] = `getInfluencesFromPoints $sel`;		int $numJoints = size($jointList);				//textScrollList -e -numberOfRows $numJoints influenceList;				for ($joint in $jointList)		{			textScrollList -e -append $joint influenceList;		}		}}global proc skinClusterNameSwap (){		if(`window -q -exists weightsWin`)	{		string $sel[] = `ls -sl`;		if(`size($sel)`)		{			string $skinClusterOrig = `textField -q -text skinClusterLister`; 			string $mesh = $sel[0];			int $errorCheck = catchQuiet (`getSkinClusterFromObject $mesh`);						if($errorCheck == 1 || `getSkinClusterFromObject $mesh` == "" )			{				textField -e -text $skinClusterOrig skinClusterLister;				print "No SkinCluster on this.";			}			else			{				string $skinCluster = `getSkinClusterFromObject $mesh`;				textField -e -text $skinCluster skinClusterLister;			}		}	}}global proc appendInfluences (){	string $skinCluster = `textField -q -text skinClusterLister`;	string $joints[] = `getInfluencesFromSkinCluster $skinCluster`;			for ($joint in $joints)	{		textScrollList -e -append $joint influenceList;	}	}global proc selectHighlighted (){	string $joints[] = `textScrollList -q -si influenceList`;	select -cl;		for ($joint in $joints)	{		select -add $joint;	}}global proc executeSelectInfluences (){	string $skinCluster = `textField -q -text skinClusterLister`;	string $joints[] = `getInfluencesFromSkinCluster $skinCluster`;		string $replaceFrom = `textField -q -text fromTextField`;	string $replaceWith = `textField -q -text toTextField`;		if ($replaceFrom != "" &&  $replaceWith != "")	{		select -cl;				for ($joint in $joints)		{			string $thisJoint = `substitute $replaceFrom  $joint $replaceWith`;			select -add $thisJoint;		}			}		else	{		select $joints;	}}global proc selectInfluencedVerts (){	string $skinCluster = `textField -q -text skinClusterLister`;	string $joint[] = `textScrollList -q  -selectItem influenceList`;	if (catchQuiet (`listInfluencedVerts $skinCluster $joint[0]`))	{		//listInfluencedVerts $skinCluster $joint[0];		print "No SkinCluster Loaded For Vets.\n";	}	else	{		string $verts[] = `listInfluencedVerts $skinCluster $joint[0]`;				if(`size($verts)`)		{			print (("No verts are influenced by" +$joint[0] ) + ".\n");		}				else		{			select $verts;		}	}}global proc tranfserInfluencesFromSelection (){	string $sel[] = `ls -sl`;	string $sourceMesh = $sel[0];	string $targetMesh = $sel[1];	tranferInfluences $sourceMesh $targetMesh;}global proc workJoints (){	string $AllJoints[] = `textScrollList -q -ai influenceList`;	string $workJoints[] = `textScrollList -q -si influenceList`;		string $lockedJoints[] = stringArrayRemoveExact ($workJoints, $AllJoints);		string $skinclusters[] = `listAllSkinclusters`;		textScrollList -e -removeAll influenceList;		for ($skincluster in $skinclusters)	{		string $joints[] = `getInfluencesFromSkinCluster $skincluster`;				for($joint in $joints)		{			setAttr ($joint + ".liw") 1;		}	}		for ($joint in $workJoints)	{		setAttr ($joint + ".liw") 0;		textScrollList -e -append $joint influenceList;	}		for ($joint in $lockedJoints)	{		textScrollList -e -append $joint influenceList;	}}global proc string[] storePoint (){	string $sel[] = `ls -fl -sl`;	return $sel;}global proc selectInfluences(){	if (`window -q -exists selectInfluencesWin`)		deleteUI selectInfluencesWin;			window -t "Select Influences" -w 245 -h 195 selectInfluencesWin;	formLayout masterLayout;	button -l "Select" -c "executeSelectInfluences" selectButton;	text -l "Substitute:" fromText;	textField fromTextField;	text -l "With:" toText;	textField toTextField;		formLayout -e		-af selectButton "top" 5	-af selectButton "left" 5	-af selectButton "right" 5		-ac fromText "top" 5 selectButton	-af fromText "left" 5		-ac fromTextField "top" 15 fromText	-af fromTextField "left" 5 	-af fromTextField "right" 5 		-ac toText "top" 15 fromTextField	-af toText "left" 5 		-ac toTextField "top" 15 toText	-af toTextField "left" 5	-af toTextField "right" 5		masterLayout;		showWindow selectInfluencesWin;}global proc floodValue (){	string $skinCluster = `textField -q -text skinClusterLister`;	string $joints[] = `textScrollList -q -si influenceList`;	float $sliderValue = `floatSliderGrp -q -v influenceSlider`;	int $mode = `radioButtonGrp -q -sl skinValueMode`;		string $verts[] = `ls -fl -sl`;		if (`size($joints)` > 0 )	{			if (`size($verts)` > 0)		{			if ($mode == 1)			{				for ($vert in $verts)				{										skinPercent -transformValue $joints[0] $sliderValue $skinCluster $vert;									}			}			if($mode == 2)			{				for ($vert in $verts)				{					float $value = `skinPercent -transform $joints[0] -query $skinCluster $vert`;					float $sumValue = $value + $sliderValue;					skinPercent -transformValue $joints[0] $sumValue $skinCluster $vert;				}			}						if($mode == 3)			{				for ($vert in $verts)				{					float $value = `skinPercent -transform $joints[0] -query $skinCluster $vert`;					float $sumValue = $value - $sliderValue;					skinPercent -transformValue $joints[0] $sumValue $skinCluster $vert;				}			}		}	}}global proc loadSkinCluster (){	string $origText = `textField -q -text skinClusterLister`;	string $points[] = `ls -fl -sl`;		if(`size($points)`)	{			if ($origText == "")		{			string $skinCluster = `getSkinClusterFromPoint $points[0]`;			textField -e -text $skinCluster skinClusterLister;		}	}}global proc weightWindow (){	int $jobNum = `scriptJob -e "SelectionChanged" "skinClusterNameSwap"`;	if(`window -q -exists weightsWin`)	{		deleteUI weightsWin;		scriptJob -kill $jobNum -force;	}			window -t "Skin Weights BSB" -wh 365 415 weightsWin;	formLayout masterLayout;	paneLayout -h 400 listLayout;	textScrollList -allowMultiSelection true -dcc "selectInfluencedVerts" influenceList;	popupMenu -button 3 -mm true;	menuItem -l "Clear" -c "textScrollList -e -removeAll influenceList"	-radialPosition "W";	menuItem -l "Add" -c influenceLister	-radialPosition "E";	menuItem -l "Isolate" -c workJoints	-radialPosition "N";	menuItem -l "Paint" -c skinningTools	-radialPosition "S";	menuItem -l "List Influences" -c appendInfluences;	menuItem -l "Select Influences" -c selectInfluences;	menuItem -l "Select Highlighted" -c selectHighlighted;	menuItem -l "Transfer Influences" -c tranfserInfluencesFromSelection;		setParent..;	setParent..;	setParent..;		string $sourcePoints[];		rowColumnLayout -nr 1 buttonLayout ;	button -l "Copy" -c "evalDeferred (\"copyWeight \" + $sourcePoints[0])" -w 120 copyButton;	popupMenu -button 3 -mm true;	menuItem -l "Copy" -c "evalDeferred \"string $sourcePoints[0] = `storePoint`\""	-radialPosition "W";	menuItem -l "Paste" -c "evalDeferred (\"copyWeight \" + $sourcePoints[0])"	-radialPosition "E";	button -l "Average" -c "averageWieght" -w 120  averageButton;	popupMenu -button 3 -mm true;	menuItem -l "Get Average" -c "evalDeferred \"string $sourcePoints[] = `storePoint`\""	-radialPosition "N";	menuItem -l "Set Average" -c "evalDeferred \"averageWieghtFromSelection $sourcePoints \""	-radialPosition "W";	menuItem -l "Average Unlocked" -c "averageUnlockedWieght"	-radialPosition "E";		button -l "Split" -c "splitJointWeghts" -w 120  splitButton;		setParent masterLayout;		rowColumnLayout -nr 1 skinClusterListerLayout;	textField -w 332 skinClusterLister;	button -l "<<<" -c "loadSkinCluster" loadSkinClusterButton;		setParent masterLayout;		columnLayout -adj true influenceLayout;	separator;	radioButtonGrp -numberOfRadioButtons 3     -sl 1 -labelArray3 "Set" "Add" "Subtract" skinValueMode;	separator;	text " ";	text " ";	rowColumnLayout -nr 1;	button -l "Flood" -w 100 -c "floodValue" floodButton;	floatSliderGrp -field true -min 0 -max 1 -v 0 -s .001 -cc "floodValue" influenceSlider;		formLayout -edit    -af   listLayout   "top"    5    -af   listLayout   "left"   5	-af   listLayout   "right"   5	-ac   listLayout "bottom" 5 buttonLayout		//-ac buttonLayout "top" 5 listLayout	-ac buttonLayout "bottom" 5 skinClusterListerLayout	-af buttonLayout "left" 5	-af buttonLayout "right" 5		-af   skinClusterListerLayout  "left"   5	-af   skinClusterListerLayout  "right"   5	-ac   skinClusterListerLayout  "bottom"   5 influenceLayout	-af influenceLayout "bottom" 5	-af influenceLayout "right" 15	-af influenceLayout "left" 15		    //-ac  copyButton    "top" 5 listLayout	//-af  copyButton   "left"   5	//-ac  copyButton   "bottom"   5 skinClusterListerLayout		//-ac  averageButton  "top" 5 listLayout	//-ac  averageButton  "left"   5 copyButton 	//-ac  averageButton   "bottom"   5 skinClusterListerLayout		//-ac  splitButton  "top" 5 listLayout	//-ac  splitButton  "left" 5 averageButton	//-af  splitButton "right"   5 	//-ac  splitButton  "bottom"   5 skinClusterListerLayout		masterLayout;		showWindow weightsWin;}