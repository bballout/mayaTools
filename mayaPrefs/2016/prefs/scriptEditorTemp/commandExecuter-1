global proc singleJointStretch ()

{
	string $sel[] = `ls -sl`;
	string $startJoint = $sel[0];
	string $endJoint = $sel[1];
	string $control = $sel[2];

	string $startNull = `group -em`;
	
	
	float $startJointPos[] = `xform -q -ws -translation $startJoint`;
	move -a $startJointPos[0] $startJointPos[1] $startJointPos[2] $startNull;

	float $startJointRot[] = `xform -q -ws -rotation $startJoint`;
	rotate -a $startJointRot[0] $startJointRot[1] $startJointRot[2] $startNull;

	string $endNull = `group -em`;
	

	float $endJointPos[] = `xform -q -ws -translation $endJoint`;
	move $endJointPos[0] $endJointPos[1] $endJointPos[2] $endNull;

	float $endJointRot[] = `xform -q -ws -rotation $endJoint`;
	rotate $endJointRot[0] $endJointRot[1] $endJointRot[2] $endNull;

	parent $endNull $startNull;
	
	string $locator[] = `spaceLocator`;

	move $endJointPos[0] $endJointPos[1] $endJointPos[2] $locator[0];

	$aimConstraint = `aimConstraint -aim 1 0 0 $locator[0] $startNull `;
	$pointConstraintStartNull = `pointConstraint -mo $locator[0] $endNull`;
	$pointConstraintEndNull = `pointConstraint -mo $startJoint $startNull`;
	$pointConstraintLoc = `pointConstraint  -mo  $control $locator[0]`;

	connectAttr -f  ($endNull + ".tx") ($endJoint + ".tx");

	rename $startNull ($startJoint + "_Null");
	rename $endNull ($endJoint + "_Null");
	rename $locator ($endJoint + "_Stretch_Loc");
		
}

float $tempPos[] = `xform -q -ws -translation LT_Finger_02_Bind_02_Jnt`;
move $tempPos[0] $tempPos[1] $tempPos[2] locator1; 


int $locked = `getAttr  -l "COG.scaleX"`